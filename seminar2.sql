CREATE DATABASE IF NOT EXISTS seminar2;

USE seminar2;

DROP TABLE IF EXISTS movie;
CREATE TABLE movie
(
	id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(45) NOT NULL,
    title_eng VARCHAR(45),
    year_movie YEAR NOT NULL,
    count_min INT,
    storyline TEXT
);

INSERT INTO movie (title, title_eng, year_movie, count_min, storyline)
VALUES 
('Игры разума', 'A Beautiful Mind', 2001, 135, 'От всемирной известности до греховных глубин — все это познал на своей шкуре Джон Форбс Нэш-младший. Математический гений, он на заре своей карьеры сделал титаническую работу в области теории игр, которая перевернула этот раздел математики и практически принесла ему международную известность. Однако буквально в то же время заносчивый и пользующийся успехом у женщин Нэш получает удар судьбы, который переворачивает уже его собственную жизнь.'),
('Форрест Гамп', 'Forrest Gump', 1994, 142, 'Сидя на автобусной остановке, Форрест Гамп — не очень умный, но добрый и открытый парень — рассказывает случайным встречным историю своей необыкновенной жизни. С самого малолетства парень страдал от заболевания ног, соседские мальчишки дразнили его, но в один прекрасный день Форрест открыл в себе невероятные способности к бегу. Подруга детства Дженни всегда его поддерживала и защищала, но вскоре дороги их разошлись.'),
('Иван Васильевич меняет профессию', NULL, 1998, 128,'Инженер-изобретатель Тимофеев сконструировал машину времени, которая соединила его квартиру с далеким шестнадцатым веком - точнее, с палатами государя Ивана Грозного. Туда-то и попадают тезка царя пенсионер-общественник Иван Васильевич Бунша и квартирный вор Жорж Милославский. На их место в двадцатом веке «переселяется» великий государь. Поломка машины приводит ко множеству неожиданных и забавных событий...'),
('Назад в будущее', 'Back to the Future', 1985, 116, 'Подросток Марти с помощью машины времени, сооружённой его другом-профессором доком Брауном, попадает из 80-х в далекие 50-е. Там он встречается со своими будущими родителями, ещё подростками, и другом-профессором, совсем молодым.'),
('Криминальное чтиво', 'Pulp Fiction', 1994, 154, NULL);

SELECT * FROM movie;

-- DDL: CREATE (создать табл), DROP (удалить табл), ALTER (добавить новый столбец или удалить его), RENAME (переименовать табл)
-- DML: INSERT (внести данные), UPDATE (обновить данные), DELETE (удалить данные), SELECT (получить данные)

-- 1. Переименуем таблицу movie
-- RENAME TABLE старое_имя TO новое_имя;

DROP TABLE IF EXISTS cinema;
RENAME TABLE movie TO cinema;
SELECT * FROM cinema;

-- 2. ALTER - добавление нового столбца 
ALTER TABLE cinema                 # в таблицу cinema
ADD COLUMN test INT DEFAULT 100,   # добавляю столбец с именем test целое число значение по умолчанию 100 (COLUMN не обязательный элемент в MySQL)
ADD price INT DEFAULT 200;         # добавляю столбец price целое число значение по умолчанию 200

SELECT * FROM cinema;

-- 3. ALTER - удаление столбца 
ALTER TABLE cinema     # из таблицы cinema
DROP test;             # удалили столбец test

DESC cinema;       # информация о таблице (служебные поля, типы данных, ограничения на NULL)
DESCRIBE cinema;   # тоже самое что и DESC
SELECT * FROM cinema;

-- 4. UPDATE
UPDATE cinema										# вносим изменения в таблицу cinema
SET price = price + 150    							# меняем значение в столбце price на + 150
WHERE title = "Иван Васильевич меняет профессию";	# в строке со значением "Иван Васильевич меняет профессию" в столбце title

SELECT * FROM cinema;

-- 5. UPDATE
-- Создадим столбец со статусом оплаты заказа
-- 0 - заказ не оплачен онлайн
-- 1 - заказ оплачен 

ALTER TABLE cinema
ADD category INT;    # новый столбец category, целое число, изначально NULL

UPDATE cinema
SET category = RAND();  # RAND() - генерирует рандомное число от 0 до 1

SELECT * FROM cinema;

SELECT
	id,
    category,
    price, -- перед CASE ставится запятая, вернется столбец с результатом 
CASE
	WHEN category = 0
		THEN "Заказ не оплачен :("
	WHEN category = 1
		THEN "Заказ оплачен :)"
	ELSE "Error" -- Категория - либое число, кроме 0 и 1
END AS result_message  -- через AS задаем псевдоним столбца который будет сформирован в результате работы операторjd CASE-END
FROM cinema;




